<<<<<<< HEAD
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Egg Size Summary</title>
	

    
    <style>
	
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
}

.container {
    width: 90%;
    max-width: 800px;
    margin: auto;
    text-align: center;
}

.input-box {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 10px;
    margin-bottom: 15px;
}

.input-box label {
    font-weight: bold;
    border: 1px solid black;
    padding: 5px;
}

.input-box input {
    width: 80px;
    padding: 5px;
    text-align: center;
}

table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 20px;
    font-size: 15px;
    overflow-x: auto;
}

th, td {
    border: 1px solid black;
    padding: 5px;
    text-align: center;
}

th {
    background-color: #f4f4f4;
}

input {
    width: 100%;
    border: none;
    text-align: center;
}

.clear-btns {
    display: flex;
    justify-content: space-around;
    margin-bottom: 10px;
}

.clear-btn {
    padding: 5px;
    font-size: 12px;
    cursor: pointer;
    color: red; /* Changes text color to red */

}

/* Responsive Table */
.table-container {
    overflow-x: auto;
    width: 100%;
}

table {
    min-width: 600px;
}

#differenceDisplay {
    font-size: 12px;
    font-weight: bold;
    margin-top: 8px;



}

/* Responsive adjustments */
@media (max-width: 600px) {
    .input-box {
        flex-direction: column;
        align-items: center;
    }

    .input-box label {
        width: 100%;
        text-align: center;
    }

    table {
        font-size: 13px;
    }

    th, td {
        padding: 3px;
    }

    .clear-btn {
        font-size: 10px;
        padding: 3px;
    }

    input {
        font-size: 14px;
    }
	
}
#totalOutput {
    background-color: red;
    color: white; /* To ensure text is readable */
    font-weight: bold;
    border: 1px solid black;
}
#brokeneggs td:nth-child(5),
#brokeneggs th:nth-child(5) {
    display: none;
}
#totalBrokenCase,
#totalBrokenTray,
#totalBrokenPieces,
#totalBrokenEggs {
    color: red;
    font-weight: bold; /* Optional: makes text more visible */
}
#egg-quote {
      transition: opacity 0.5s ease-in-out;
      font-size: 1.2em;
      text-align: center;
      margin-top: 50px;
 }

    </style>
</head>
<body>
    <div class="container">
	<img src="logo.jpg" alt="Company Logo" width="310" height="95">

        <h3>BUILDING EGG PRODUCTION</h3>
<script>
        function showDateAndDay() {
            const date = new Date();
            const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
            document.getElementById("dateDisplay").innerHTML = date.toLocaleDateString("en-US", options);
        }
    </script>
</head>
<body onload="showDateAndDay()">
   <p> <B id="dateDisplay"></B></p>
        <div class="input-box">
            <label>CASE: <input type="number" id="caseInput" oninput="calculateTotals()" min="0"></label>
            <label>TRAYS: <input type="number" id="trayInput" oninput="calculateTotals()" min="0"></label>
            <label>TOTAL: <input type="number" id="totalOutput" readonly></label>
			</div>
		
<table id=brokeneggs>
    <thead>
        <tr>
            <th></th>
            <th>CASE</th>
            <th>TRAYS</th>
            <th>PIECES</th>
            <th>TOTAL PIECES</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td><b>GOOD CRACKS</b></td>
            <td><input type="number" id="bcaseInput" oninput="calculateTotals()" min="0"></td>
            <td><input type="number" id="btrayInput" oninput="calculateTotals()" min="0"></td>
            <td><input type="number" id="bpiecesInput" oninput="calculateTotals()" min="0"></td>
            <td><input type="number" id="btotalPieces" readonly></td>
        </tr>
        <tr>
            <td><b>BAD CRACKS</b></td>
            <td><input type="number" id="bbcaseInput" oninput="calculateTotals()" min="0"></td>
            <td><input type="number" id="bbtrayInput" oninput="calculateTotals()" min="0"></td>
            <td><input type="number" id="bbpiecesInput" oninput="calculateTotals()" min="0"></td>
            <td><input type="number" id="bbtotalPieces" readonly></td>
        </tr>
        <tr>
            <td><b style="color: red;">TOTAL BROKEN EGGS</b></td>
            <td><input type="number" id="totalBrokenCase" readonly></td>
            <td><input type="number" id="totalBrokenTray" readonly></td>
            <td><input type="number" id="totalBrokenPieces" readonly></td>
            <td><input type="number" id="totalBrokenEggs" readonly></td>
        </tr>
    </tbody>
</table>

<div id="messageDisplay" style="font-weight: bold; margin-top: 10px;"></div>

        <div id="differenceDisplay"></div> <!-- Difference display added -->
<br>
        <table>
            <thead>
                <tr>
                    <th>SIZE</th>
                    <th>TOTAL PIECES</th>
                    <th>PERCENTAGE (%)</th>
                    <th>
                        <b style="color: blue;">CASES <br>
                        <button class="clear-btn" onclick="clearColumnValues('cases')">DELETE</button>
                    </th>
                    <th>
                        <b style="color: blue;">TRAYS <br>
                        <button class="clear-btn" onclick="clearColumnValues('trays')">DELETE</button>
                    </th>
                    <th>
                       <b style="color: blue;"> PIECES <br>
                        <button class="clear-btn" onclick="clearColumnValues('pieces')">DELETE</button>
                    </th>
                </tr>
            </thead>
            <H3>ETANS EGG SIZE SUMARRY CHECKER</H3>
			<MARQUEE><b style="color: GREEN;"><B>Huwag kalimutan isulat ang building egg production, broken eggs at loss sa hard copy.</B></MARQUEE>
            <tbody id="tableBody">

                
                <script>
                    const sizes = [
                        "NNV", "NO VALUE", "NO WEIGHT", "PULLET", "PEEWEE", "SMALL",
                        "MEDIUM", "LARGE", "X-LARGE", "JUMBO", "S-JUMBO",
                        "BROKEN", "BOLD", "LOSS"
                    ];

                    sizes.forEach(size => {
                        let percentageField = (size === "BOLD") ? '<td rowspan="2"><input type="number" id="boldLossPercentage" readonly></td>' : 
                                           (size === "LOSS") ? "" : '<td><input type="number" class="percentageRow" readonly></td>';

                        document.write(`
                            <tr>
                                <td>${size}</td>
                                <td><input type="number" class="totalPiecesRow" readonly></td>
                                ${percentageField}
                                <td><input type="number" class="cases" oninput="calculateTotals()" min="0"></td>
                                <td><input type="number" class="trays" oninput="calculateTotals()" min="0"></td>
                                <td><input type="number" class="pieces" oninput="calculateTotals()" min="0"></td>
                            </tr>
                        `);
                    });

                    document.write(`
                        <tr>
                            <td>TOTAL</td>
                            <td><input type="number" id="grandTotalPieces" readonly></td>
                            <td><input type="number" id="totalPercentage" readonly></td>
                            <td><input type="number" id="totalCases" readonly></td>
                            <td><input type="number" id="totalTrays" readonly></td>
                            <td><input type="number" id="totalPieces" readonly></td>
                        </tr>
                    `);

 function clearColumnValues(columnClass) {
    document.querySelectorAll(`.${columnClass}`).forEach(input => {
        input.value = "";
    });
    calculateTotals(); // Recalculate totals after clearing values
}
                   
// Debounce function to reduce input lag
function debounce(func, delay) {
    let timer;
    return function (...args) {
        clearTimeout(timer);
        timer = setTimeout(() => func.apply(this, args), delay);
    };
}

// Function to calculate totals efficiently
function calculateTotals() {
   let caseTotal = 0, trayTotal = 0, pieceTotal = 0, grandTotalPieces = 0;

document.querySelectorAll("#tableBody tr").forEach(row => {
    let sizeName = row.cells[0].textContent.trim().toUpperCase();

    let caseInput = row.querySelector(".cases");
    let trayInput = row.querySelector(".trays");
    let pieceInput = row.querySelector(".pieces");

    let caseVal = Number(caseInput?.value) || 0;
    let trayVal = Number(trayInput?.value) || 0;
    let pieceVal = Number(pieceInput?.value) || 0;

    // ✅ Include all values (including LOSS) in total pieces
    grandTotalPieces += (caseVal * 360) + (trayVal * 30) + pieceVal;

    // ❌ Exclude LOSS row from PIECES column total
    if (sizeName !== "LOSS") {
        caseTotal += caseVal;
        trayTotal += trayVal;
        pieceTotal += pieceVal;
    }
});

document.getElementById("totalCases").value = caseTotal;
document.getElementById("totalTrays").value = trayTotal;
document.getElementById("totalPieces").value = pieceTotal;
document.getElementById("grandTotalPieces").value = grandTotalPieces;


    // Compute total production
    let caseInput = Number(document.getElementById("caseInput").value) || 0;
    let trayInput = Number(document.getElementById("trayInput").value) || 0;
    let totalProduction = (caseInput * 360) + (trayInput * 30);
    document.getElementById("totalOutput").value = totalProduction;

    // Compute broken eggs (Good Cracks)
    let bcaseInput = Number(document.getElementById("bcaseInput").value) || 0;
    let btrayInput = Number(document.getElementById("btrayInput").value) || 0;
    let bpiecesInput = Number(document.getElementById("bpiecesInput").value) || 0;
    let btotalBroken = (bcaseInput * 360) + (btrayInput * 30) + bpiecesInput;
    document.getElementById("btotalPieces").value = btotalBroken;

    // Compute broken eggs (Bad Cracks)
    let bbcaseInput = Number(document.getElementById("bbcaseInput").value) || 0;
    let bbtrayInput = Number(document.getElementById("bbtrayInput").value) || 0;
    let bbpiecesInput = Number(document.getElementById("bbpiecesInput").value) || 0;
    let bbtotalBroken = (bbcaseInput * 360) + (bbtrayInput * 30) + bbpiecesInput;
    document.getElementById("bbtotalPieces").value = bbtotalBroken;

    // Compute total broken eggs
    let totalBrokenPieces = btotalBroken + bbtotalBroken;
    let totalBrokenCase = Math.floor(totalBrokenPieces / 360);
    let remainingAfterCases = totalBrokenPieces % 360;
    let totalBrokenTray = Math.floor(remainingAfterCases / 30);
    let totalBrokenFinalPieces = remainingAfterCases % 30;

    // Update total broken eggs
    document.getElementById("totalBrokenCase").value = totalBrokenCase;
    document.getElementById("totalBrokenTray").value = totalBrokenTray;
    document.getElementById("totalBrokenEggs").value = totalBrokenPieces;
    document.getElementById("totalBrokenPieces").value = totalBrokenFinalPieces;

    // Update "Broken" row in table dynamically
    document.querySelectorAll("#tableBody tr").forEach(row => {
        let firstCellText = row.cells[0]?.textContent.trim().toLowerCase();
        if (firstCellText === "broken") {
            row.cells[3].querySelector("input").value = totalBrokenCase;
            row.cells[4].querySelector("input").value = totalBrokenTray;
            row.cells[5].querySelector("input").value = totalBrokenFinalPieces;
        }
    });

    // Compute percentage per row
    let totalPercentage = 0;
    let boldLossTotal = 0;

    document.querySelectorAll("tbody tr").forEach(row => {
        let sizeName = row.cells[0].textContent.trim();
		    // Change font color of LOSS pieces input
    if (sizeName === "LOSS") {
        let lossPiecesInput = row.querySelector(".pieces");
        if (lossPiecesInput) {
            lossPiecesInput.style.color = "red";
        }
    }

        let caseVal = Number(row.querySelector(".cases")?.value) || 0;
        let trayVal = Number(row.querySelector(".trays")?.value) || 0;
        let pieceVal = Number(row.querySelector(".pieces")?.value) || 0;
        let totalPieceVal = (caseVal * 360) + (trayVal * 30) + pieceVal;

        let totalPiecesField = row.querySelector(".totalPiecesRow");
        let percentageField = row.querySelector(".percentageRow");

        if (totalPiecesField) {
            totalPiecesField.value = totalPieceVal;
        }

        if (sizeName === "BOLD" || sizeName === "LOSS") {
            boldLossTotal += totalPieceVal;
        } else if (percentageField) {
            let percentage = totalProduction > 0 ? (totalPieceVal / totalProduction) * 100 : 0;
            percentageField.value = percentage.toFixed(2);
            totalPercentage += percentage;
        }
    });

    // Compute BOLD and LOSS percentage
    let boldLossPercentage = totalProduction > 0 ? (boldLossTotal / totalProduction) * 100 : 0;
    document.getElementById("boldLossPercentage").value = boldLossPercentage.toFixed(2);
    totalPercentage += boldLossPercentage;

    // Update total percentage
    document.getElementById("totalPercentage").value = totalPercentage.toFixed(2);

    // Compute difference
    let difference = grandTotalPieces - totalProduction;
    let sign = difference > 0 ? "+" : "";
    document.getElementById("differenceDisplay").innerText = `DIFFERENCE: ${sign}${difference} pieces`;

    // Display error message if total doesn't match
    let messageDisplay = document.getElementById("messageDisplay");
    if (totalProduction !== grandTotalPieces) {
        messageDisplay.innerText = "ERROR: Hindi tugma ang total production sa nalistang egg sizes. Pakisuri at bilangin muli ang mga itlog.";
        messageDisplay.style.color = "red";
    } else {
        messageDisplay.innerText = "Ang paglista ay tama.";
        messageDisplay.style.color = "green";
    }
}

// Attach debounced input event listeners
const debouncedCalculateTotals = debounce(calculateTotals, 300);

document.addEventListener("DOMContentLoaded", function () {
    document.querySelectorAll(".cases, .trays, .pieces").forEach(input => {
        input.addEventListener("input", debouncedCalculateTotals);
    });

    document.querySelectorAll("#bcaseInput, #btrayInput, #bpiecesInput, #bbcaseInput, #bbtrayInput, #bbpiecesInput")
        .forEach(input => input.addEventListener("input", debouncedCalculateTotals));

    // Remove non-numeric characters from number fields
    document.querySelectorAll('input[type="number"]').forEach(input => {
        input.addEventListener("input", function () {
            this.value = this.value.replace(/[^0-9]/g, '');
        });
    });
});
function exportTableToCSV() {
    let table = document.getElementById("tableBody");
    let csvContent = [];

    // Get headers
    let headers = ["SIZE", "TOTAL PIECES", "PERCENTAGE (%)", "CASES", "TRAYS", "PIECES"];
    csvContent.push(headers.join(",")); 

    // Loop through each row in the table
    table.querySelectorAll("tr").forEach(row => {
        let rowData = [];
        row.querySelectorAll("td").forEach((cell, index) => {
            let input = cell.querySelector("input");
            let cellText = input ? input.value : cell.textContent.trim();
            rowData.push(cellText);
        });
        csvContent.push(rowData.join(","));
    });

    // Convert to CSV format
    let csvData = csvContent.join("\n");
    let blob = new Blob([csvData], { type: "text/csv" });
    let url = window.URL.createObjectURL(blob);
    let a = document.createElement("a");
    a.href = url;
    a.download = "Egg_Size_Summary.csv";
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
}




</script>
	

            </tbody>
        </table>
    </div>
    <h3 id="egg-quote">Loading egg quote...</h3>

  <script src="quotes.js"></script>
</body><BR>
<CENTER>
<button onclick="exportTableToCSV()">Export to CSV</button><br>
<b style="color: blue;">For E.L TAN FARM use only<br> Alrights Reserved 2025</b\><br><br>
<footer>Developed by Kenneth Q. Ortega</footer>
</CENTER>
</html>
=======
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Egg Size Summary</title>
	

    
    <style>
	
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
}

.container {
    width: 90%;
    max-width: 800px;
    margin: auto;
    text-align: center;
}

.input-box {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 10px;
    margin-bottom: 15px;
}

.input-box label {
    font-weight: bold;
    border: 1px solid black;
    padding: 5px;
}

.input-box input {
    width: 80px;
    padding: 5px;
    text-align: center;
}

table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 20px;
    font-size: 15px;
    overflow-x: auto;
}

th, td {
    border: 1px solid black;
    padding: 5px;
    text-align: center;
}

th {
    background-color: #f4f4f4;
}

input {
    width: 100%;
    border: none;
    text-align: center;
}

.clear-btns {
    display: flex;
    justify-content: space-around;
    margin-bottom: 10px;
}

.clear-btn {
    padding: 5px;
    font-size: 12px;
    cursor: pointer;
    color: red; /* Changes text color to red */

}

/* Responsive Table */
.table-container {
    overflow-x: auto;
    width: 100%;
}

table {
    min-width: 600px;
}

#differenceDisplay {
    font-size: 12px;
    font-weight: bold;
    margin-top: 8px;



}

/* Responsive adjustments */
@media (max-width: 600px) {
    .input-box {
        flex-direction: column;
        align-items: center;
    }

    .input-box label {
        width: 100%;
        text-align: center;
    }

    table {
        font-size: 13px;
    }

    th, td {
        padding: 3px;
    }

    .clear-btn {
        font-size: 10px;
        padding: 3px;
    }

    input {
        font-size: 14px;
    }
	
}
#totalOutput {
    background-color: red;
    color: white; /* To ensure text is readable */
    font-weight: bold;
    border: 1px solid black;
}
#brokeneggs td:nth-child(5),
#brokeneggs th:nth-child(5) {
    display: none;
}
#totalBrokenCase,
#totalBrokenTray,
#totalBrokenPieces,
#totalBrokenEggs {
    color: red;
    font-weight: bold; /* Optional: makes text more visible */
}
#egg-quote {
      transition: opacity 0.5s ease-in-out;
      font-size: 1.2em;
      text-align: center;
      margin-top: 50px;
 }

    </style>
</head>
<body>
    <div class="container">
	<img src="logo.jpg" alt="Company Logo" width="310" height="95">

        <h3>BUILDING EGG PRODUCTION</h3>
<script>
        function showDateAndDay() {
            const date = new Date();
            const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
            document.getElementById("dateDisplay").innerHTML = date.toLocaleDateString("en-US", options);
        }
    </script>
</head>
<body onload="showDateAndDay()">
   <p> <B id="dateDisplay"></B></p>
        <div class="input-box">
            <label>CASE: <input type="number" id="caseInput" oninput="calculateTotals()" min="0"></label>
            <label>TRAYS: <input type="number" id="trayInput" oninput="calculateTotals()" min="0"></label>
            <label>TOTAL: <input type="number" id="totalOutput" readonly></label>
			</div>
		
<table id=brokeneggs>
    <thead>
        <tr>
            <th></th>
            <th>CASE</th>
            <th>TRAYS</th>
            <th>PIECES</th>
            <th>TOTAL PIECES</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td><b>GOOD CRACKS</b></td>
            <td><input type="number" id="bcaseInput" oninput="calculateTotals()" min="0"></td>
            <td><input type="number" id="btrayInput" oninput="calculateTotals()" min="0"></td>
            <td><input type="number" id="bpiecesInput" oninput="calculateTotals()" min="0"></td>
            <td><input type="number" id="btotalPieces" readonly></td>
        </tr>
        <tr>
            <td><b>BAD CRACKS</b></td>
            <td><input type="number" id="bbcaseInput" oninput="calculateTotals()" min="0"></td>
            <td><input type="number" id="bbtrayInput" oninput="calculateTotals()" min="0"></td>
            <td><input type="number" id="bbpiecesInput" oninput="calculateTotals()" min="0"></td>
            <td><input type="number" id="bbtotalPieces" readonly></td>
        </tr>
        <tr>
            <td><b style="color: red;">TOTAL BROKEN EGGS</b></td>
            <td><input type="number" id="totalBrokenCase" readonly></td>
            <td><input type="number" id="totalBrokenTray" readonly></td>
            <td><input type="number" id="totalBrokenPieces" readonly></td>
            <td><input type="number" id="totalBrokenEggs" readonly></td>
        </tr>
    </tbody>
</table>

<div id="messageDisplay" style="font-weight: bold; margin-top: 10px;"></div>

        <div id="differenceDisplay"></div> <!-- Difference display added -->
<br>
        <table>
            <thead>
                <tr>
                    <th>SIZE</th>
                    <th>TOTAL PIECES</th>
                    <th>PERCENTAGE (%)</th>
                    <th>
                        <b style="color: blue;">CASES <br>
                        <button class="clear-btn" onclick="clearColumnValues('cases')">DELETE</button>
                    </th>
                    <th>
                        <b style="color: blue;">TRAYS <br>
                        <button class="clear-btn" onclick="clearColumnValues('trays')">DELETE</button>
                    </th>
                    <th>
                       <b style="color: blue;"> PIECES <br>
                        <button class="clear-btn" onclick="clearColumnValues('pieces')">DELETE</button>
                    </th>
                </tr>
            </thead>
            <H3>ETANS EGG SIZE SUMARRY CHECKER</H3>
			<MARQUEE><b style="color: GREEN;"><B>Huwag kalimutan isulat ang building egg production, broken eggs at loss sa hard copy.</B></MARQUEE>
            <tbody id="tableBody">

                
                <script>
                    const sizes = [
                        "NNV", "NO VALUE", "NO WEIGHT", "PULLET", "PEEWEE", "SMALL",
                        "MEDIUM", "LARGE", "X-LARGE", "JUMBO", "S-JUMBO",
                        "BROKEN", "BOLD", "LOSS"
                    ];

                    sizes.forEach(size => {
                        let percentageField = (size === "BOLD") ? '<td rowspan="2"><input type="number" id="boldLossPercentage" readonly></td>' : 
                                           (size === "LOSS") ? "" : '<td><input type="number" class="percentageRow" readonly></td>';

                        document.write(`
                            <tr>
                                <td>${size}</td>
                                <td><input type="number" class="totalPiecesRow" readonly></td>
                                ${percentageField}
                                <td><input type="number" class="cases" oninput="calculateTotals()" min="0"></td>
                                <td><input type="number" class="trays" oninput="calculateTotals()" min="0"></td>
                                <td><input type="number" class="pieces" oninput="calculateTotals()" min="0"></td>
                            </tr>
                        `);
                    });

                    document.write(`
                        <tr>
                            <td>TOTAL</td>
                            <td><input type="number" id="grandTotalPieces" readonly></td>
                            <td><input type="number" id="totalPercentage" readonly></td>
                            <td><input type="number" id="totalCases" readonly></td>
                            <td><input type="number" id="totalTrays" readonly></td>
                            <td><input type="number" id="totalPieces" readonly></td>
                        </tr>
                    `);

 function clearColumnValues(columnClass) {
    document.querySelectorAll(`.${columnClass}`).forEach(input => {
        input.value = "";
    });
    calculateTotals(); // Recalculate totals after clearing values
}
                   
// Debounce function to reduce input lag
function debounce(func, delay) {
    let timer;
    return function (...args) {
        clearTimeout(timer);
        timer = setTimeout(() => func.apply(this, args), delay);
    };
}

// Function to calculate totals efficiently
function calculateTotals() {
   let caseTotal = 0, trayTotal = 0, pieceTotal = 0, grandTotalPieces = 0;

document.querySelectorAll("#tableBody tr").forEach(row => {
    let sizeName = row.cells[0].textContent.trim().toUpperCase();

    let caseInput = row.querySelector(".cases");
    let trayInput = row.querySelector(".trays");
    let pieceInput = row.querySelector(".pieces");

    let caseVal = Number(caseInput?.value) || 0;
    let trayVal = Number(trayInput?.value) || 0;
    let pieceVal = Number(pieceInput?.value) || 0;

    // ✅ Include all values (including LOSS) in total pieces
    grandTotalPieces += (caseVal * 360) + (trayVal * 30) + pieceVal;

    // ❌ Exclude LOSS row from PIECES column total
    if (sizeName !== "LOSS") {
        caseTotal += caseVal;
        trayTotal += trayVal;
        pieceTotal += pieceVal;
    }
});

document.getElementById("totalCases").value = caseTotal;
document.getElementById("totalTrays").value = trayTotal;
document.getElementById("totalPieces").value = pieceTotal;
document.getElementById("grandTotalPieces").value = grandTotalPieces;


    // Compute total production
    let caseInput = Number(document.getElementById("caseInput").value) || 0;
    let trayInput = Number(document.getElementById("trayInput").value) || 0;
    let totalProduction = (caseInput * 360) + (trayInput * 30);
    document.getElementById("totalOutput").value = totalProduction;

    // Compute broken eggs (Good Cracks)
    let bcaseInput = Number(document.getElementById("bcaseInput").value) || 0;
    let btrayInput = Number(document.getElementById("btrayInput").value) || 0;
    let bpiecesInput = Number(document.getElementById("bpiecesInput").value) || 0;
    let btotalBroken = (bcaseInput * 360) + (btrayInput * 30) + bpiecesInput;
    document.getElementById("btotalPieces").value = btotalBroken;

    // Compute broken eggs (Bad Cracks)
    let bbcaseInput = Number(document.getElementById("bbcaseInput").value) || 0;
    let bbtrayInput = Number(document.getElementById("bbtrayInput").value) || 0;
    let bbpiecesInput = Number(document.getElementById("bbpiecesInput").value) || 0;
    let bbtotalBroken = (bbcaseInput * 360) + (bbtrayInput * 30) + bbpiecesInput;
    document.getElementById("bbtotalPieces").value = bbtotalBroken;

    // Compute total broken eggs
    let totalBrokenPieces = btotalBroken + bbtotalBroken;
    let totalBrokenCase = Math.floor(totalBrokenPieces / 360);
    let remainingAfterCases = totalBrokenPieces % 360;
    let totalBrokenTray = Math.floor(remainingAfterCases / 30);
    let totalBrokenFinalPieces = remainingAfterCases % 30;

    // Update total broken eggs
    document.getElementById("totalBrokenCase").value = totalBrokenCase;
    document.getElementById("totalBrokenTray").value = totalBrokenTray;
    document.getElementById("totalBrokenEggs").value = totalBrokenPieces;
    document.getElementById("totalBrokenPieces").value = totalBrokenFinalPieces;

    // Update "Broken" row in table dynamically
    document.querySelectorAll("#tableBody tr").forEach(row => {
        let firstCellText = row.cells[0]?.textContent.trim().toLowerCase();
        if (firstCellText === "broken") {
            row.cells[3].querySelector("input").value = totalBrokenCase;
            row.cells[4].querySelector("input").value = totalBrokenTray;
            row.cells[5].querySelector("input").value = totalBrokenFinalPieces;
        }
    });

    // Compute percentage per row
    let totalPercentage = 0;
    let boldLossTotal = 0;

    document.querySelectorAll("tbody tr").forEach(row => {
        let sizeName = row.cells[0].textContent.trim();
		    // Change font color of LOSS pieces input
    if (sizeName === "LOSS") {
        let lossPiecesInput = row.querySelector(".pieces");
        if (lossPiecesInput) {
            lossPiecesInput.style.color = "red";
        }
    }

        let caseVal = Number(row.querySelector(".cases")?.value) || 0;
        let trayVal = Number(row.querySelector(".trays")?.value) || 0;
        let pieceVal = Number(row.querySelector(".pieces")?.value) || 0;
        let totalPieceVal = (caseVal * 360) + (trayVal * 30) + pieceVal;

        let totalPiecesField = row.querySelector(".totalPiecesRow");
        let percentageField = row.querySelector(".percentageRow");

        if (totalPiecesField) {
            totalPiecesField.value = totalPieceVal;
        }

        if (sizeName === "BOLD" || sizeName === "LOSS") {
            boldLossTotal += totalPieceVal;
        } else if (percentageField) {
            let percentage = totalProduction > 0 ? (totalPieceVal / totalProduction) * 100 : 0;
            percentageField.value = percentage.toFixed(2);
            totalPercentage += percentage;
        }
    });

    // Compute BOLD and LOSS percentage
    let boldLossPercentage = totalProduction > 0 ? (boldLossTotal / totalProduction) * 100 : 0;
    document.getElementById("boldLossPercentage").value = boldLossPercentage.toFixed(2);
    totalPercentage += boldLossPercentage;

    // Update total percentage
    document.getElementById("totalPercentage").value = totalPercentage.toFixed(2);

    // Compute difference
    let difference = grandTotalPieces - totalProduction;
    let sign = difference > 0 ? "+" : "";
    document.getElementById("differenceDisplay").innerText = `DIFFERENCE: ${sign}${difference} pieces`;

    // Display error message if total doesn't match
    let messageDisplay = document.getElementById("messageDisplay");
    if (totalProduction !== grandTotalPieces) {
        messageDisplay.innerText = "ERROR: Hindi tugma ang total production sa nalistang egg sizes. Pakisuri at bilangin muli ang mga itlog.";
        messageDisplay.style.color = "red";
    } else {
        messageDisplay.innerText = "Ang paglista ay tama.";
        messageDisplay.style.color = "green";
    }
}

// Attach debounced input event listeners
const debouncedCalculateTotals = debounce(calculateTotals, 300);

document.addEventListener("DOMContentLoaded", function () {
    document.querySelectorAll(".cases, .trays, .pieces").forEach(input => {
        input.addEventListener("input", debouncedCalculateTotals);
    });

    document.querySelectorAll("#bcaseInput, #btrayInput, #bpiecesInput, #bbcaseInput, #bbtrayInput, #bbpiecesInput")
        .forEach(input => input.addEventListener("input", debouncedCalculateTotals));

    // Remove non-numeric characters from number fields
    document.querySelectorAll('input[type="number"]').forEach(input => {
        input.addEventListener("input", function () {
            this.value = this.value.replace(/[^0-9]/g, '');
        });
    });
});
function exportTableToCSV() {
    let table = document.getElementById("tableBody");
    let csvContent = [];

    // Get headers
    let headers = ["SIZE", "TOTAL PIECES", "PERCENTAGE (%)", "CASES", "TRAYS", "PIECES"];
    csvContent.push(headers.join(",")); 

    // Loop through each row in the table
    table.querySelectorAll("tr").forEach(row => {
        let rowData = [];
        row.querySelectorAll("td").forEach((cell, index) => {
            let input = cell.querySelector("input");
            let cellText = input ? input.value : cell.textContent.trim();
            rowData.push(cellText);
        });
        csvContent.push(rowData.join(","));
    });

    // Convert to CSV format
    let csvData = csvContent.join("\n");
    let blob = new Blob([csvData], { type: "text/csv" });
    let url = window.URL.createObjectURL(blob);
    let a = document.createElement("a");
    a.href = url;
    a.download = "Egg_Size_Summary.csv";
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
}




</script>
	

            </tbody>
        </table>
    </div>
    <h3 id="egg-quote">Loading egg quote...</h3>

  <script src="quotes.js"></script>
</body><BR>
<CENTER>
<button onclick="exportTableToCSV()">Export to CSV</button><br>
<b style="color: blue;">For E.L TAN FARM use only<br> Alrights Reserved 2025</b\><br><br>
<footer>Developed by Kenneth Q. Ortega</footer>
</CENTER>
</html>
>>>>>>> daef07c (Signed-off-by: zapster2025 <kenziortega91@gmail.com>)
